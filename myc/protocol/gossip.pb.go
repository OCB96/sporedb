// Code generated by protoc-gen-go. DO NOT EDIT.
// source: myc/protocol/gossip.proto

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import version "gitlab.com/SporeDB/sporedb/db/version"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Hello struct {
	Version  uint64 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Identity string `protobuf:"bytes,2,opt,name=identity" json:"identity,omitempty"`
}

func (m *Hello) Reset()                    { *m = Hello{} }
func (m *Hello) String() string            { return proto.CompactTextString(m) }
func (*Hello) ProtoMessage()               {}
func (*Hello) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Hello) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Hello) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

type Raw struct {
	Key       string     `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Version   *version.V `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	Data      []byte     `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Signature []byte     `protobuf:"bytes,10,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *Raw) Reset()                    { *m = Raw{} }
func (m *Raw) String() string            { return proto.CompactTextString(m) }
func (*Raw) ProtoMessage()               {}
func (*Raw) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Raw) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Raw) GetVersion() *version.V {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Raw) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Raw) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type Node struct {
	Identity string `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
	Address  string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Node) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *Node) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type Nodes struct {
	Nodes []*Node `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
}

func (m *Nodes) Reset()                    { *m = Nodes{} }
func (m *Nodes) String() string            { return proto.CompactTextString(m) }
func (*Nodes) ProtoMessage()               {}
func (*Nodes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Nodes) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type Gossip struct {
	Spores  []string `protobuf:"bytes,1,rep,name=spores" json:"spores,omitempty"`
	Request bool     `protobuf:"varint,2,opt,name=request" json:"request,omitempty"`
}

func (m *Gossip) Reset()                    { *m = Gossip{} }
func (m *Gossip) String() string            { return proto.CompactTextString(m) }
func (*Gossip) ProtoMessage()               {}
func (*Gossip) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Gossip) GetSpores() []string {
	if m != nil {
		return m.Spores
	}
	return nil
}

func (m *Gossip) GetRequest() bool {
	if m != nil {
		return m.Request
	}
	return false
}

func init() {
	proto.RegisterType((*Hello)(nil), "protocol.Hello")
	proto.RegisterType((*Raw)(nil), "protocol.Raw")
	proto.RegisterType((*Node)(nil), "protocol.Node")
	proto.RegisterType((*Nodes)(nil), "protocol.Nodes")
	proto.RegisterType((*Gossip)(nil), "protocol.Gossip")
}

func init() { proto.RegisterFile("myc/protocol/gossip.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x65, 0xf2, 0x87, 0xe4, 0x8a, 0x10, 0xf2, 0x80, 0x4c, 0xc5, 0x10, 0x45, 0x1d, 0xb2,
	0x90, 0x48, 0x65, 0x43, 0x30, 0xc3, 0xc4, 0xe0, 0x81, 0xdd, 0xad, 0xad, 0xca, 0x22, 0xc4, 0xc1,
	0xe7, 0x82, 0xf2, 0xed, 0x91, 0xdd, 0x98, 0xa8, 0x53, 0xee, 0x77, 0x2f, 0xef, 0xee, 0xf9, 0xe0,
	0xee, 0x6b, 0xda, 0x77, 0xa3, 0x35, 0xce, 0xec, 0x4d, 0xdf, 0x1d, 0x0c, 0xa2, 0x1e, 0xdb, 0xc0,
	0xb4, 0x88, 0xed, 0x35, 0x93, 0xbb, 0xee, 0x47, 0x59, 0xd4, 0x66, 0x88, 0xdf, 0xd3, 0x3f, 0xf5,
	0x0b, 0x64, 0x6f, 0xaa, 0xef, 0x0d, 0x65, 0x70, 0x39, 0x2b, 0x8c, 0x54, 0xa4, 0x49, 0x79, 0x44,
	0xba, 0x86, 0x42, 0x4b, 0x35, 0x38, 0xed, 0x26, 0x76, 0x51, 0x91, 0xa6, 0xe4, 0xff, 0x5c, 0x1b,
	0x48, 0xb8, 0xf8, 0xa5, 0x37, 0x90, 0x7c, 0xaa, 0x29, 0x18, 0x4b, 0xee, 0x4b, 0xba, 0x59, 0xc6,
	0x79, 0xcf, 0x6a, 0x0b, 0x6d, 0x5c, 0xfc, 0xb1, 0x8c, 0xa6, 0x90, 0x4a, 0xe1, 0x04, 0x4b, 0x2a,
	0xd2, 0x5c, 0xf1, 0x50, 0xd3, 0x7b, 0x28, 0x51, 0x1f, 0x06, 0xe1, 0x8e, 0x56, 0x31, 0x08, 0xc2,
	0xd2, 0xa8, 0x9f, 0x21, 0x7d, 0x37, 0x52, 0x9d, 0x85, 0x22, 0xe7, 0xa1, 0xfc, 0x53, 0x84, 0x94,
	0x56, 0x21, 0xce, 0x79, 0x23, 0xd6, 0x0f, 0x90, 0x79, 0x37, 0xd2, 0x0d, 0x64, 0x83, 0x2f, 0x18,
	0xa9, 0x92, 0x66, 0xb5, 0xbd, 0x6e, 0xe3, 0xa9, 0x5a, 0xaf, 0xf3, 0x93, 0x58, 0x3f, 0x41, 0xfe,
	0x1a, 0x0e, 0x4a, 0x6f, 0x21, 0xc7, 0xd1, 0xd8, 0xd9, 0x50, 0xf2, 0x99, 0xfc, 0x2a, 0xab, 0xbe,
	0x8f, 0x0a, 0x5d, 0x58, 0x55, 0xf0, 0x88, 0xbb, 0x3c, 0x4c, 0x7c, 0xfc, 0x0b, 0x00, 0x00, 0xff,
	0xff, 0xf6, 0x10, 0x3f, 0x71, 0xa0, 0x01, 0x00, 0x00,
}
